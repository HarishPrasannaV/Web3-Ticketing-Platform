{"ast":null,"code":"var _jsxFileName = \"/Users/pomo/Desktop/tokenmaster/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\n// Components\nimport Navigation from \"./components/Navigation\";\nimport Sort from \"./components/Sort\";\nimport Card from \"./components/Card\";\nimport SeatChart from \"./components/SeatChart\";\n\n// ABIs\nimport TokenMaster from \"./abis/TokenMaster.json\";\n\n// Config\nimport config from \"./config.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [tokenMaster, setTokenMaster] = useState(null);\n  const [occasions, setOccasions] = useState(null);\n  const loadBlockchainData = async () => {\n    //Ethers Provider\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n\n    //connection to the contract\n\n    const network = await provider.getNetwork();\n    const address = config[network.chainId].TokenMaster.address;\n    const tokenMaster = new ethers.Contract(address, TokenMaster, provider);\n    setTokenMaster(tokenMaster);\n    const totalOccasions = await tokenMaster.occasionId();\n    const occasions = [];\n    await Promise.all(Array.from({\n      length: totalOccasions.toNumber()\n    }, async (_, index) => {\n      const occasion = await tokenMaster.getOccasion(index);\n      occasions.push(occasion);\n    }));\n\n    // for (let i = 0; i <= totalOccasions; i++) {\n    //   const occasion = await tokenMaster.getOccasion(i);\n    //   occasions.push(occasion);\n    // }\n\n    setOccasions(occasions);\n    console.log(occasions);\n\n    //Updating the account after changing it\n\n    window.ethereum.on(\"accountsChanged\", async () => {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = ethers.utils.getAddress(accounts[0]);\n      setAccount(account);\n    });\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  let disOcs = occasions.slice(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        account: account,\n        setAccount: setAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header__title\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \" Tickets\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: occasions !== null ? disOcs.map((occasion, index) => /*#__PURE__*/_jsxDEV(Card, {\n        occasion: occasion\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading occasions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IFLGx2eAfUQ6eS8uAC+dPK+0ZzE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","Navigation","Sort","Card","SeatChart","TokenMaster","config","jsxDEV","_jsxDEV","App","_s","provider","setProvider","account","setAccount","tokenMaster","setTokenMaster","occasions","setOccasions","loadBlockchainData","providers","Web3Provider","window","ethereum","network","getNetwork","address","chainId","Contract","totalOccasions","occasionId","Promise","all","Array","from","length","toNumber","_","index","occasion","getOccasion","push","console","log","on","accounts","request","method","utils","getAddress","disOcs","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","_c","$RefreshReg$"],"sources":["/Users/pomo/Desktop/tokenmaster/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\n// Components\nimport Navigation from \"./components/Navigation\";\nimport Sort from \"./components/Sort\";\nimport Card from \"./components/Card\";\nimport SeatChart from \"./components/SeatChart\";\n\n// ABIs\nimport TokenMaster from \"./abis/TokenMaster.json\";\n\n// Config\nimport config from \"./config.json\";\n\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [tokenMaster, setTokenMaster] = useState(null);\n  const [occasions, setOccasions] = useState(null);\n\n  const loadBlockchainData = async () => {\n    //Ethers Provider\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n\n    //connection to the contract\n\n    const network = await provider.getNetwork();\n    const address = config[network.chainId].TokenMaster.address;\n    const tokenMaster = new ethers.Contract(address, TokenMaster, provider);\n    setTokenMaster(tokenMaster);\n\n    const totalOccasions = await tokenMaster.occasionId();\n    const occasions = [];\n\n    await Promise.all(\n      Array.from({ length: totalOccasions.toNumber() }, async (_, index) => {\n        const occasion = await tokenMaster.getOccasion(index);\n        occasions.push(occasion);\n      })\n    );\n\n    // for (let i = 0; i <= totalOccasions; i++) {\n    //   const occasion = await tokenMaster.getOccasion(i);\n    //   occasions.push(occasion);\n    // }\n\n    setOccasions(occasions);\n\n    console.log(occasions);\n\n    //Updating the account after changing it\n\n    window.ethereum.on(\"accountsChanged\", async () => {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      const account = ethers.utils.getAddress(accounts[0]);\n      setAccount(account);\n    });\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n\n  let disOcs = occasions.slice(1);\n\n  return (\n    <div>\n      <header>\n        <Navigation account={account} setAccount={setAccount} />\n        <h2 className=\"header__title\">\n          <strong>Event</strong> Tickets\n        </h2>\n      </header>\n      <div className=\"cards\">\n        {occasions !== null ? (\n          disOcs.map((occasion, index) => (\n            <Card key={index} occasion={occasion} />\n          ))\n        ) : (\n          <p>Loading occasions...</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}