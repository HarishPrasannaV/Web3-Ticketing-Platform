{"ast":null,"code":"var _jsxFileName = \"/Users/pomo/Desktop/tokenmaster/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\n// Components\nimport Navigation from \"./components/Navigation\";\nimport Sort from \"./components/Sort\";\nimport Card from \"./components/Card\";\nimport SeatChart from \"./components/SeatChart\";\n\n// ABIs\nimport TokenMaster from \"./abis/TokenMaster.json\";\n\n// Config\nimport config from \"./config.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [tokenMaster, setTokenMaster] = useState(null);\n  const loadBlockchainData = async () => {\n    //Ethers Provider\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n\n    //connection to the contract\n\n    const network = await provider.getNetwork();\n    const address = config[network.chainId].TokenMaster.address;\n    const tokenMaster = new ethers.Contract(address, TokenMaster, provider);\n    setTokenMaster(tokenMaster);\n    const totalOccasions = await tokenMaster.occasionId();\n    const occasions = [];\n    for (let i = 0; i <= totalOccasions; i++) {\n      const occasion = await tokenMaster.getOccasion(i);\n      occasions.push(occasion);\n    }\n\n    //Updating the account after changing it\n\n    window.ethereum.on(\"accountsChanged\", async () => {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = ethers.utils.getAddress(accounts[0]);\n      setAccount(account);\n    });\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        account: account,\n        setAccount: setAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header__title\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" Tickets\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello Bro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bXo6T5o5pyFRQvWPRcZPEnz2gbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","Navigation","Sort","Card","SeatChart","TokenMaster","config","jsxDEV","_jsxDEV","App","_s","provider","setProvider","account","setAccount","tokenMaster","setTokenMaster","loadBlockchainData","providers","Web3Provider","window","ethereum","network","getNetwork","address","chainId","Contract","totalOccasions","occasionId","occasions","i","occasion","getOccasion","push","on","accounts","request","method","utils","getAddress","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/pomo/Desktop/tokenmaster/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\n// Components\nimport Navigation from \"./components/Navigation\";\nimport Sort from \"./components/Sort\";\nimport Card from \"./components/Card\";\nimport SeatChart from \"./components/SeatChart\";\n\n// ABIs\nimport TokenMaster from \"./abis/TokenMaster.json\";\n\n// Config\nimport config from \"./config.json\";\n\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [tokenMaster, setTokenMaster] = useState(null);\n\n  const loadBlockchainData = async () => {\n    //Ethers Provider\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n\n    //connection to the contract\n\n    const network = await provider.getNetwork();\n    const address = config[network.chainId].TokenMaster.address;\n    const tokenMaster = new ethers.Contract(address, TokenMaster, provider);\n    setTokenMaster(tokenMaster);\n\n    const totalOccasions = await tokenMaster.occasionId();\n    const occasions = [];\n\n    for (let i = 0; i <= totalOccasions; i++) {\n      const occasion = await tokenMaster.getOccasion(i);\n      occasions.push(occasion);\n    }\n\n    //Updating the account after changing it\n\n    window.ethereum.on(\"accountsChanged\", async () => {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      const account = ethers.utils.getAddress(accounts[0]);\n      setAccount(account);\n    });\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n\n  return (\n    <div>\n      <header>\n        <Navigation account={account} setAccount={setAccount} />\n        <h2 className=\"header__title\">\n          <strong>Event</strong> Tickets\n        </h2>\n      </header>\n      <h1>Hello Bro</h1>\n      <p>{account}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}